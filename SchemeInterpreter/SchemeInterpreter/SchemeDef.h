//
// File: SchemeDef.h
// =================
//

#ifndef __SCHEMEDEF_H__
#define __SCHEMEDEF_H__


// SIZE
#define VARIABLE_SIZE_MAX		0x0000FFFF
#define VARIABLE_SIZE_MASK		0xFFFF0000
#define VARIABLE_GET_SIZE(info)	((info & VARIABLE_SIZE_MASK) >> 16)

// VARIABLE TYPES
typedef unsigned long VARIABLE_TYPE;
#define VARIABLE_TYPE_MASK		0x0000F000
#define VARIABLE_TYPE_NOTSET	0x00000000
#define VARIABLE_TYPE_INTEGER	0x00001000
#define VARIABLE_TYPE_FLOAT		0x00002000
#define VARIABLE_TYPE_SYMBOL	0x00003000
#define VARIABLE_TYPE_PAIR		0x00004000
#define VARIABLE_TYPE_CUSTOM	0x00005000
#define VARIABLE_GET_TYPE(info)	(info & VARIABLE_TYPE_MASK)

// REFERENCE COUNT
#define VARIABLE_REFCOUNT_MAX	0x00000FFF
#define VARIABLE_REFCOUNT_MASK	VARIABLE_REFCOUNT_MAX
#define VARIABLE_GET_REFCOUNT(info)	(info & VARIABLE_REFCOUNT_MASK)

// MEMORY ADDRESS
typedef unsigned short MEMORY_ADDR;
#define MEMORY_ADDR_INVALID		0x0000
#define MEMORY_ADDR_MAX			0xFFFF

// PAIR DEFINITION
typedef unsigned long SCHEME_PAIR;
#define PAIR_FORMER_ADDR(p)		((p & 0xFFFF0000) >> 16)
#define PAIR_LATTER_ADDR(p)		(p & 0x0000FFFF)
#define MAKE_PAIR(a, b)			((SCHEME_PAIR)((a & 0xFFFF) << 16 + (b & 0xFFFF)))

// OTHER
#define MEMORYPOOL_SIZE			0xFFFE
#define SCHEME_SYMBOL_MAX_LEN	256
#define SCHEME_SYMBOL_UNNAMED	L"*noname*"

struct Variable
{
	union { void *ptr; unsigned long data; };
	unsigned long info;
};

#endif // __SCHEMEDEF_H__